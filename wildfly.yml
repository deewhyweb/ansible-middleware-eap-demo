---
- name: "JBoss EAP installation and configuration"
  hosts: wildfly
  become: yes
  vars:
    wildfly_install_workdir: '/opt'
    install_name: "{{ override_install_name | default('wildfly') }}"
    wildfly_user: "{{ install_name }}"
    wildfly_config_base: standalone-ha.xml
    wildfly_home: "{{ wildfly_install_workdir }}/{{ install_name }}-preview-{{ wildfly_version }}"
    instance_http_ports:
      - 8180
      - 8280
      - 8380
    instance_management_ports:
      - 10090
      - 10190
      - 10290
    app:
      name: 'kitchensink.war'
      url: 'https://drive.google.com/uc?export=download&id=1QLfgvLBb_hU6FPH4RWBK8RASgeWzJuFC'
  collections:
    - middleware_automation.redhat_csp_download
    - middleware_automation.wildfly
    - middleware_automation.jcliff
  roles:
    - redhat_csp_download
    - wildfly_install
  tasks:

    - name: "Set up for Wildfly instance {{ item }}"
      include_role:
        name: wildfly_systemd
      vars:
        wildfly_config_base: 'standalone-ha.xml'
        wildfly_basedir_prefix: "/opt/{{ install_name }}-{{ item }}"
        wildfly_config_name: "{{ install_name }}"
        wildfly_port_range_offset: -1
        wildfly_instance_name: "{{ install_name }}"
        instance_id: "{{ item }}"
        service_systemd_env_file: "/etc/{{ install_name }}-{{ item }}.conf"
        service_systemd_conf_file: "/usr/lib/systemd/system/{{ install_name }}-{{ item }}.service"
      loop: "{{ range(0,3) | list }}"

    - name: "Ensures webapp {{ app.name }} has been retrieved from {{ app.url }}"
      get_url:
        url: "{{ app.url }}"
        dest: "{{ wildfly_install_workdir }}/{{ app.name }}"

    - name: "Deploy webapp"
      include_role:
        name: jboss_eap
        tasks_from: jboss_cli.yml
      vars:
        jboss_home: "{{ wildfly_home }}"
        query: "'deploy --force {{ wildfly_install_workdir }}/{{ app.name }}'"
        jboss_cli_controller_port: "{{ item }}"
      loop: "{{ instance_management_ports }}"

    - name: "Set up module dir for mysql JDBC Driver"
      file:
        path: "{{ jdbc_driver_module_dir }}"
        state: directory
        recurse: yes
        group: "{{ wildfly_user }}"
        owner: "{{ wildfly_user }}"

    - name: "Ensures Wildfly mysql Driver is present"
      uri:
        url: "{{ jdbc_driver_jar_url }}"
        dest: "{{ jdbc_driver_jar_installation_path }}"
        group: "{{ wildfly_user }}"
        owner: "{{ wildfly_user }}"
        creates: "{{ jdbc_driver_jar_installation_path }}"

    - name: "Deploy module.xml for mysql JDBC Driver"
      template:
        src: templates/mysql_jdbc_driver_module.xml.j2
        dest: "{{ jdbc_driver_module_dir }}/module.xml"
        group: "{{ wildfly_user }}"
        owner: "{{ wildfly_user }}"


    - name: "Ensures JCliff version is appropriate"
      yum:
        name: jcliff-2.12.8
        state: present

    - name: JCliff
      include_role:
        name: jcliff
  
 
    - name: "Fine tuning configuration"
      jcliff:
        wfly_home: "{{ wildfly_home }}"
        rule_file: jcliff/rules
        timeout: 7000
        management_port: "{{ item }}"
        components:
          - drivers:
              - driver_name: mysql
                driver_module_name: com.mysql
                driver_class_name: com.mysql.cj.jdbc.Driver
          - datasources:
              - name: "mysql"
                jndi_name: "java:/jdbc/mysql"
                connection_url: "jdbc:mysql://{{ groups['mysql'][0] }}:3306/{{ database.name }}"
                driver_name: mysql
                user_name: "{{ database.user }}"
                password: "{{ database.password }}"
          - modcluster:
              proxy:
                - name: default
                  proxies:
                    - proxy1
      loop: "{{ instance_management_ports }}"

  post_tasks:
    - include_tasks: validate.yml
      loop: "{{ instance_http_ports }}"
